-- Rectangle Sectioned Visual Spawner Interface with Collapsible Sections
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- Load spawner library
local Spawner = loadstring(game:HttpGet("https://codeberg.org/GrowAFilipino/GrowAGarden/raw/branch/main/Spawner.lua"))()

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Main GUI container
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SpawnerInterface Must stay in serv for 5 min to save"
screenGui.Parent = playerGui
screenGui.ResetOnSpawn = false

-- Primary frame (rectangle) - made taller for vertical layout
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 320, 0, 320)
mainFrame.Position = UDim2.new(0.5, -160, 0.5, -160)
mainFrame.BackgroundColor3 = Color3.fromRGB(16, 16, 22)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

-- Frame styling (minimal corner radius for rectangle look)
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 4)
corner.Parent = mainFrame

-- Border
local mainStroke = Instance.new("UIStroke")
mainStroke.Color = Color3.fromRGB(50, 50, 65)
mainStroke.Thickness = 1
mainStroke.Transparency = 0.5
mainStroke.Parent = mainFrame

-- Header section
local header = Instance.new("Frame")
header.Name = "Header"
header.Size = UDim2.new(1, 0, 0, 35)
header.BackgroundColor3 = Color3.fromRGB(22, 22, 30)
header.BorderSizePixel = 0
header.Parent = mainFrame

local headerCorner = Instance.new("UICorner")
headerCorner.CornerRadius = UDim.new(0, 4)
headerCorner.Parent = header

-- Header bottom fix
local headerBottom = Instance.new("Frame")
headerBottom.Size = UDim2.new(1, 0, 0, 4)
headerBottom.Position = UDim2.new(0, 0, 1, -4)
headerBottom.BackgroundColor3 = Color3.fromRGB(22, 22, 30)
headerBottom.BorderSizePixel = 0
headerBottom.Parent = header

-- Title
local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "Title"
titleLabel.Size = UDim2.new(1, -50, 1, 0)
titleLabel.Position = UDim2.new(0, 15, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Visual Spawner Interface"
titleLabel.TextColor3 = Color3.fromRGB(240, 240, 250)
titleLabel.TextSize = 14
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Parent = header

-- Close button
local closeButton = Instance.new("TextButton")
closeButton.Name = "CloseButton"
closeButton.Size = UDim2.new(0, 20, 0, 20)
closeButton.Position = UDim2.new(1, -27, 0, 7)
closeButton.BackgroundColor3 = Color3.fromRGB(180, 60, 60)
closeButton.Text = "×"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.TextSize = 12
closeButton.Font = Enum.Font.GothamBold
closeButton.BorderSizePixel = 0
closeButton.Parent = header

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 3)
closeCorner.Parent = closeButton

-- Content container
local contentFrame = Instance.new("Frame")
contentFrame.Name = "ContentFrame"
contentFrame.Size = UDim2.new(1, -20, 1, -45)
contentFrame.Position = UDim2.new(0, 10, 0, 40)
contentFrame.BackgroundTransparency = 1
contentFrame.Parent = mainFrame

-- Vertical layout for sections
local layout = Instance.new("UIListLayout")
layout.FillDirection = Enum.FillDirection.Vertical
layout.SortOrder = Enum.SortOrder.LayoutOrder
layout.Padding = UDim.new(0, 8)
layout.Parent = contentFrame

-- Track section states
local sectionStates = {}

-- Function to create collapsible section
local function createSection(title, layoutOrder, color)
    local section = Instance.new("Frame")
    section.Name = title .. "Section"
    section.Size = UDim2.new(1, 0, 0, 35) -- Start collapsed (header only)
    section.BackgroundColor3 = Color3.fromRGB(24, 24, 32)
    section.BorderSizePixel = 0
    section.LayoutOrder = layoutOrder
    section.Parent = contentFrame
    
    local sectionCorner = Instance.new("UICorner")
    sectionCorner.CornerRadius = UDim.new(0, 4)
    sectionCorner.Parent = section
    
    local sectionStroke = Instance.new("UIStroke")
    sectionStroke.Color = color
    sectionStroke.Thickness = 1
    sectionStroke.Transparency = 0.7
    sectionStroke.Parent = section
    
    -- Section header (clickable)
    local sectionHeader = Instance.new("TextButton")
    sectionHeader.Name = "SectionHeader"
    sectionHeader.Size = UDim2.new(1, 0, 0, 35)
    sectionHeader.BackgroundColor3 = Color3.fromRGB(28, 28, 38)
    sectionHeader.BorderSizePixel = 0
    sectionHeader.Text = ""
    sectionHeader.Parent = section
    
    local sectionHeaderCorner = Instance.new("UICorner")
    sectionHeaderCorner.CornerRadius = UDim.new(0, 4)
    sectionHeaderCorner.Parent = sectionHeader
    
    -- Section title
    local sectionTitle = Instance.new("TextLabel")
    sectionTitle.Name = "SectionTitle"
    sectionTitle.Size = UDim2.new(1, -40, 1, 0)
    sectionTitle.Position = UDim2.new(0, 15, 0, 0)
    sectionTitle.BackgroundTransparency = 1
    sectionTitle.Text = title
    sectionTitle.TextColor3 = color
    sectionTitle.TextSize = 11
    sectionTitle.Font = Enum.Font.GothamSemibold
    sectionTitle.TextXAlignment = Enum.TextXAlignment.Left
    sectionTitle.Parent = sectionHeader
    
    -- Expand/Collapse arrow
    local arrow = Instance.new("TextLabel")
    arrow.Name = "Arrow"
    arrow.Size = UDim2.new(0, 20, 0, 20)
    arrow.Position = UDim2.new(1, -25, 0, 7)
    arrow.BackgroundTransparency = 1
    arrow.Text = "▼"
    arrow.TextColor3 = color
    arrow.TextSize = 10
    arrow.Font = Enum.Font.GothamBold
    arrow.TextXAlignment = Enum.TextXAlignment.Center
    arrow.TextYAlignment = Enum.TextYAlignment.Center
    arrow.Parent = sectionHeader
    
    -- Animated accent line
    local accentLine = Instance.new("Frame")
    accentLine.Name = "AccentLine"
    accentLine.Size = UDim2.new(0, 0, 0, 2)
    accentLine.Position = UDim2.new(0.5, 0, 1, -2)
    accentLine.AnchorPoint = Vector2.new(0.5, 0)
    accentLine.BackgroundColor3 = color
    accentLine.BorderSizePixel = 0
    accentLine.Parent = sectionHeader
    
    -- Content container (initially hidden)
    local contentContainer = Instance.new("Frame")
    contentContainer.Name = "ContentContainer"
    contentContainer.Size = UDim2.new(1, 0, 0, 85) -- Height for content
    contentContainer.Position = UDim2.new(0, 0, 0, 35)
    contentContainer.BackgroundTransparency = 1
    contentContainer.Visible = false
    contentContainer.Parent = section
    
    -- Initialize section state
    sectionStates[title] = {
        expanded = false,
        section = section,
        arrow = arrow,
        contentContainer = contentContainer,
        expandedHeight = 120 -- Header + content height
    }
    
    -- Animate accent line
    spawn(function()
        wait(layoutOrder * 0.1)
        local lineTween = TweenService:Create(accentLine, TweenInfo.new(0.6, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0.8, 0, 0, 2)})
        lineTween:Play()
    end)
    
    -- Click handler for expand/collapse
    sectionHeader.MouseButton1Click:Connect(function()
        local state = sectionStates[title]
        state.expanded = not state.expanded
        
        if state.expanded then
            -- Expand
            state.contentContainer.Visible = true
            local expandTween = TweenService:Create(section, TweenInfo.new(0.3, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {
                Size = UDim2.new(1, 0, 0, state.expandedHeight)
            })
            local arrowTween = TweenService:Create(arrow, TweenInfo.new(0.3), {Rotation = 180})
            expandTween:Play()
            arrowTween:Play()
        else
            -- Collapse
            local collapseTween = TweenService:Create(section, TweenInfo.new(0.3, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {
                Size = UDim2.new(1, 0, 0, 35)
            })
            local arrowTween = TweenService:Create(arrow, TweenInfo.new(0.3), {Rotation = 0})
            collapseTween:Play()
            arrowTween:Play()
            
            collapseTween.Completed:Connect(function()
                if not state.expanded then
                    state.contentContainer.Visible = false
                end
            end)
        end
    end)
    
    return section, contentContainer
end

-- Function to create input field
local function createInput(parent, placeholder, position, size)
    local inputContainer = Instance.new("Frame")
    inputContainer.Size = size
    inputContainer.Position = position
    inputContainer.BackgroundTransparency = 1
    inputContainer.Parent = parent
    
    local input = Instance.new("TextBox")
    input.Size = UDim2.new(1, 0, 1, 0)
    input.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
    input.BorderSizePixel = 0
    input.PlaceholderText = placeholder
    input.PlaceholderColor3 = Color3.fromRGB(120, 120, 140)
    input.Text = ""
    input.TextColor3 = Color3.fromRGB(240, 240, 250)
    input.TextSize = 10
    input.Font = Enum.Font.Gotham
    input.TextXAlignment = Enum.TextXAlignment.Center
    input.Parent = inputContainer
    
    local inputCorner = Instance.new("UICorner")
    inputCorner.CornerRadius = UDim.new(0, 3)
    inputCorner.Parent = input
    
    local inputStroke = Instance.new("UIStroke")
    inputStroke.Color = Color3.fromRGB(60, 60, 75)
    inputStroke.Thickness = 1
    inputStroke.Transparency = 0.5
    inputStroke.Parent = input
    
    -- Focus animations
    input.Focused:Connect(function()
        local focusTween = TweenService:Create(inputStroke, TweenInfo.new(0.3), {Color = Color3.fromRGB(120, 120, 140), Transparency = 0})
        focusTween:Play()
    end)
    
    input.FocusLost:Connect(function()
        local blurTween = TweenService:Create(inputStroke, TweenInfo.new(0.3), {Color = Color3.fromRGB(60, 60, 75), Transparency = 0.5})
        blurTween:Play()
    end)
    
    return input
end

-- Function to create button
local function createButton(parent, text, position, size, color)
    local button = Instance.new("TextButton")
    button.Size = size
    button.Position = position
    button.BackgroundColor3 = color
    button.BorderSizePixel = 0
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = 10
    button.Font = Enum.Font.GothamSemibold
    button.Parent = parent
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 3)
    buttonCorner.Parent = button
    
    -- Ripple effect container
    local rippleFrame = Instance.new("Frame")
    rippleFrame.Size = UDim2.new(1, 0, 1, 0)
    rippleFrame.BackgroundTransparency = 1
    rippleFrame.ClipsDescendants = true
    rippleFrame.Parent = button
    
    local rippleCorner = Instance.new("UICorner")
    rippleCorner.CornerRadius = UDim.new(0, 3)
    rippleCorner.Parent = rippleFrame
    
    -- Button animations
    button.MouseEnter:Connect(function()
        local hoverTween = TweenService:Create(button, TweenInfo.new(0.2), {
            BackgroundColor3 = Color3.fromRGB(
                math.min(255, color.R * 255 + 15),
                math.min(255, color.G * 255 + 15),
                math.min(255, color.B * 255 + 15)
            )
        })
        hoverTween:Play()
    end)
    
    button.MouseLeave:Connect(function()
        local leaveTween = TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = color})
        leaveTween:Play()
    end)
    
    button.MouseButton1Click:Connect(function()
        -- Ripple effect
        local ripple = Instance.new("Frame")
        ripple.Size = UDim2.new(0, 0, 0, 0)
        ripple.Position = UDim2.new(0.5, 0, 0.5, 0)
        ripple.AnchorPoint = Vector2.new(0.5, 0.5)
        ripple.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        ripple.BackgroundTransparency = 0.7
        ripple.BorderSizePixel = 0
        ripple.Parent = rippleFrame
        
        local rippleCorner = Instance.new("UICorner")
        rippleCorner.CornerRadius = UDim.new(1, 0)
        rippleCorner.Parent = ripple
        
        local rippleTween = TweenService:Create(ripple, TweenInfo.new(0.5), {
            Size = UDim2.new(2, 0, 2, 0),
            BackgroundTransparency = 1
        })
        rippleTween:Play()
        
        rippleTween.Completed:Connect(function()
            ripple:Destroy()
        end)
    end)
    
    return button
end

-- Pet Section
local petSection, petContent = createSection("Pet Spawner", 1, Color3.fromRGB(255, 140, 100))
local petNameInput = createInput(petContent, "Pet Name", UDim2.new(0, 8, 0, 5), UDim2.new(1, -16, 0, 18))
local petKgInput = createInput(petContent, "Weight", UDim2.new(0, 8, 0, 28), UDim2.new(0.48, -4, 0, 16))
local petAgeInput = createInput(petContent, "Age", UDim2.new(0.52, 4, 0, 28), UDim2.new(0.48, -4, 0, 16))
local spawnPetButton = createButton(petContent, "Spawn Pet", UDim2.new(0, 8, 0, 49), UDim2.new(1, -16, 0, 18), Color3.fromRGB(255, 120, 80))
local getPetsButton = createButton(petContent, "List Available", UDim2.new(0, 8, 0, 72), UDim2.new(1, -16, 0, 15), Color3.fromRGB(180, 100, 60))

-- Seed Section
local seedSection, seedContent = createSection("Seed Spawner", 2, Color3.fromRGB(120, 200, 120))
local seedNameInput = createInput(seedContent, "Seed Name", UDim2.new(0, 8, 0, 5), UDim2.new(1, -16, 0, 18))
local spawnSeedButton = createButton(seedContent, "Spawn Seed", UDim2.new(0, 8, 0, 28), UDim2.new(1, -16, 0, 18), Color3.fromRGB(100, 180, 100))
local spinSeedButton = createButton(seedContent, "Spin Seed", UDim2.new(0, 8, 0, 51), UDim2.new(1, -16, 0, 18), Color3.fromRGB(140, 200, 80))
local getSeedsButton = createButton(seedContent, "List Available", UDim2.new(0, 8, 0, 72), UDim2.new(1, -16, 0, 15), Color3.fromRGB(80, 160, 80))

-- Egg Section
local eggSection, eggContent = createSection("Egg Spawner", 3, Color3.fromRGB(180, 120, 200))
local eggNameInput = createInput(eggContent, "Egg Name", UDim2.new(0, 8, 0, 5), UDim2.new(1, -16, 0, 18))
local spawnEggButton = createButton(eggContent, "Spawn Egg", UDim2.new(0, 8, 0, 28), UDim2.new(1, -16, 0, 20), Color3.fromRGB(160, 100, 180))
local getEggsButton = createButton(eggContent, "List Available", UDim2.new(0, 8, 0, 53), UDim2.new(1, -16, 0, 15), Color3.fromRGB(140, 80, 160))

-- Status Section
local statusSection, statusContent = createSection("System Status", 4, Color3.fromRGB(140, 140, 140))
local statusLabel = Instance.new("TextLabel")
statusLabel.Name = "StatusLabel"
statusLabel.Size = UDim2.new(1, -16, 1, -10)
statusLabel.Position = UDim2.new(0, 8, 0, 5)
statusLabel.BackgroundTransparency = 1
statusLabel.Text = "System ready"
statusLabel.TextColor3 = Color3.fromRGB(200, 200, 220)
statusLabel.TextSize = 9
statusLabel.Font = Enum.Font.Gotham
statusLabel.TextXAlignment = Enum.TextXAlignment.Center
statusLabel.TextYAlignment = Enum.TextYAlignment.Top
statusLabel.TextWrapped = true
statusLabel.Parent = statusContent

-- Status update function
local function updateStatus(message, color)
    statusLabel.Text = message
    statusLabel.TextColor3 = color or Color3.fromRGB(200, 200, 220)
    
    -- Fade animation
    statusLabel.TextTransparency = 0.7
    local fadeTween = TweenService:Create(statusLabel, TweenInfo.new(0.3), {TextTransparency = 0})
    fadeTween:Play()
end

-- Event handlers
spawnPetButton.MouseButton1Click:Connect(function()
    local petName = petNameInput.Text:gsub("^%s*(.-)%s*$", "%1")
    local kg = tonumber(petKgInput.Text) or 1
    local age = tonumber(petAgeInput.Text) or 1
    
    if petName ~= "" then
        local success, error = pcall(function()
            Spawner.SpawnPet(petName, kg, age)
        end)
        
        if success then
            updateStatus("Pet spawned: " .. petName, Color3.fromRGB(120, 220, 120))
            petNameInput.Text = ""
            petKgInput.Text = ""
            petAgeInput.Text = ""
        else
            updateStatus("Failed to spawn pet", Color3.fromRGB(220, 120, 120))
        end
    else
        updateStatus("Pet name required", Color3.fromRGB(220, 180, 120))
    end
end)

spawnSeedButton.MouseButton1Click:Connect(function()
    local seedName = seedNameInput.Text:gsub("^%s*(.-)%s*$", "%1")
    
    if seedName ~= "" then
        local success, error = pcall(function()
            Spawner.SpawnSeed(seedName)
        end)
        
        if success then
            updateStatus("Seed spawned: " .. seedName, Color3.fromRGB(120, 220, 120))
            seedNameInput.Text = ""
        else
            updateStatus("Failed to spawn seed", Color3.fromRGB(220, 120, 120))
        end
    else
        updateStatus("Seed name required", Color3.fromRGB(220, 180, 120))
    end
end)

spawnEggButton.MouseButton1Click:Connect(function()
    local eggName = eggNameInput.Text:gsub("^%s*(.-)%s*$", "%1")
    
    if eggName ~= "" then
        local success, error = pcall(function()
            Spawner.SpawnEgg(eggName)
        end)
        
        if success then
            updateStatus("Egg spawned: " .. eggName, Color3.fromRGB(120, 220, 120))
            eggNameInput.Text = ""
        else
            updateStatus("Failed to spawn egg", Color3.fromRGB(220, 120, 120))
        end
    else
        updateStatus("Egg name required", Color3.fromRGB(220, 180, 120))
    end
end)

spinSeedButton.MouseButton1Click:Connect(function()
    local seedName = seedNameInput.Text:gsub("^%s*(.-)%s*$", "%1")
    
    if seedName ~= "" then
        local success, error = pcall(function()
            Spawner.Spin(seedName)
        end)
        
        if success then
            updateStatus("Spinning: " .. seedName, Color3.fromRGB(255, 200, 120))
        else
            updateStatus("Failed to spin", Color3.fromRGB(220, 120, 120))
        end
    else
        updateStatus("Seed name required", Color3.fromRGB(220, 180, 120))
    end
end)

getPetsButton.MouseButton1Click:Connect(function()
    local success, pets = pcall(function()
        return Spawner.GetPets()
    end)
    
    if success and pets then
        updateStatus("Pets loaded: " .. #pets .. " types", Color3.fromRGB(255, 180, 120))
    else
        updateStatus("Failed to load pets", Color3.fromRGB(220, 120, 120))
    end
end)

getSeedsButton.MouseButton1Click:Connect(function()
    local success, seeds = pcall(function()
        return Spawner.GetSeeds()
    end)
    
    if success and seeds then
        updateStatus("Seeds loaded: " .. #seeds .. " types", Color3.fromRGB(120, 220, 120))
    else
        updateStatus("Failed to load seeds", Color3.fromRGB(220, 120, 120))
    end
end)

getEggsButton.MouseButton1Click:Connect(function()
    local success, eggs = pcall(function()
        return Spawner.GetEggs()
    end)
    
    if success and eggs then
        updateStatus("Eggs loaded: " .. #eggs .. " types", Color3.fromRGB(180, 140, 220))
    else
        updateStatus("Failed to load eggs", Color3.fromRGB(220, 120, 120))
    end
end)

closeButton.MouseButton1Click:Connect(function()
    local closeTween = TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
        Size = UDim2.new(0, 0, 0, 0),
        Position = UDim2.new(0.5, 0, 0.5, 0)
    })
    closeTween:Play()
    
    closeTween.Completed:Connect(function()
        screenGui:Destroy()
    end)
end)

-- Window dragging
local dragging = false
local dragStart = nil
local startPosition = nil

header.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPosition = mainFrame.Position
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(
            startPosition.X.Scale, 
            startPosition.X.Offset + delta.X, 
            startPosition.Y.Scale, 
            startPosition.Y.Offset + delta.Y
        )
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

-- Entrance animation
mainFrame.Size = UDim2.new(0, 0, 0, 0)
mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)

local entranceTween = TweenService:Create(mainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
    Size = UDim2.new(0, 320, 0, 320),
    Position = UDim2.new(0.5, -160, 0.5, -160)
})
entranceTween:Play()

-- Initialize status
updateStatus("Interface ready", Color3.fromRGB(120, 220, 120))
