local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local SoundService = game:GetService("SoundService")

local CONFIG = {
    UI_NAME = "ProfessionalUI",
    VERSION = "2.1.0",
    THEME = {
        PRIMARY = Color3.fromRGB(25, 30, 40),
        SECONDARY = Color3.fromRGB(35, 42, 56),
        ACCENT = Color3.fromRGB(64, 158, 255),
        SUCCESS = Color3.fromRGB(34, 197, 94),
        WARNING = Color3.fromRGB(251, 191, 36),
        DANGER = Color3.fromRGB(239, 68, 68),
        TEXT_PRIMARY = Color3.fromRGB(248, 250, 252),
        TEXT_SECONDARY = Color3.fromRGB(148, 163, 184),
        BORDER = Color3.fromRGB(51, 65, 85)
    },
    ANIMATIONS = {
        FAST = TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        MEDIUM = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        SLOW = TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out)
    },
    DIMENSIONS = {
        WIDTH = 320,
        HEIGHT = 220,
        TITLE_HEIGHT = 40,
        BORDER_RADIUS = 12
    }
}

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local UIManager = {}
UIManager.__index = UIManager

function UIManager:new()
    local self = setmetatable({}, UIManager)
    self.isMinimized = false
    self.isDragging = false
    self.originalSize = UDim2.new(0, CONFIG.DIMENSIONS.WIDTH, 0, CONFIG.DIMENSIONS.HEIGHT)
    self:initialize()
    return self
end

function UIManager:initialize()
    self:createScreenGui()
    self:createMainFrame()
    self:createTitleBar()
    self:createContentArea()
    self:setupEventHandlers()
    self:playEntranceAnimation()
end

function UIManager:createScreenGui()
    local existing = playerGui:FindFirstChild(CONFIG.UI_NAME)
    if existing then existing:Destroy() end
    
    self.screenGui = Instance.new("ScreenGui")
    self.screenGui.Name = CONFIG.UI_NAME
    self.screenGui.ResetOnSpawn = false
    self.screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    self.screenGui.Parent = playerGui
end

function UIManager:createMainFrame()
    self.mainFrame = Instance.new("Frame")
    self.mainFrame.Name = "MainContainer"
    self.mainFrame.Size = self.originalSize
    self.mainFrame.Position = UDim2.new(0.5, -CONFIG.DIMENSIONS.WIDTH/2, 0.5, -CONFIG.DIMENSIONS.HEIGHT/2)
    self.mainFrame.BackgroundColor3 = CONFIG.THEME.PRIMARY
    self.mainFrame.BorderSizePixel = 0
    self.mainFrame.Active = true
    self.mainFrame.ZIndex = 100
    self.mainFrame.Parent = self.screenGui
    
    local shadow = Instance.new("ImageLabel")
    shadow.Name = "DropShadow"
    shadow.Size = UDim2.new(1, 20, 1, 20)
    shadow.Position = UDim2.new(0, -10, 0, -10)
    shadow.BackgroundTransparency = 1
    shadow.Image = "rbxasset://textures/ui/Controls/DropShadow.png"
    shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
    shadow.ImageTransparency = 0.7
    shadow.ScaleType = Enum.ScaleType.Slice
    shadow.SliceCenter = Rect.new(10, 10, 118, 118)
    shadow.ZIndex = 99
    shadow.Parent = self.mainFrame
    
    local border = Instance.new("UIStroke")
    border.Color = CONFIG.THEME.BORDER
    border.Thickness = 1
    border.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    border.Parent = self.mainFrame
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, CONFIG.DIMENSIONS.BORDER_RADIUS)
    corner.Parent = self.mainFrame
end

function UIManager:createTitleBar()
    self.titleBar = Instance.new("Frame")
    self.titleBar.Name = "TitleBar"
    self.titleBar.Size = UDim2.new(1, 0, 0, CONFIG.DIMENSIONS.TITLE_HEIGHT)
    self.titleBar.BackgroundColor3 = CONFIG.THEME.SECONDARY
    self.titleBar.BorderSizePixel = 0
    self.titleBar.ZIndex = 101
    self.titleBar.Parent = self.mainFrame
    
    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, CONFIG.DIMENSIONS.BORDER_RADIUS)
    titleCorner.Parent = self.titleBar
    
    local titleFix = Instance.new("Frame")
    titleFix.Size = UDim2.new(1, 0, 0, CONFIG.DIMENSIONS.BORDER_RADIUS)
    titleFix.Position = UDim2.new(0, 0, 1, -CONFIG.DIMENSIONS.BORDER_RADIUS)
    titleFix.BackgroundColor3 = CONFIG.THEME.SECONDARY
    titleFix.BorderSizePixel = 0
    titleFix.ZIndex = 101
    titleFix.Parent = self.titleBar
    
    local appIcon = Instance.new("Frame")
    appIcon.Name = "AppIcon"
    appIcon.Size = UDim2.new(0, 24, 0, 24)
    appIcon.Position = UDim2.new(0, 12, 0.5, -12)
    appIcon.BackgroundColor3 = CONFIG.THEME.ACCENT
    appIcon.BorderSizePixel = 0
    appIcon.ZIndex = 102
    appIcon.Parent = self.titleBar
    
    local iconCorner = Instance.new("UICorner")
    iconCorner.CornerRadius = UDim.new(0, 6)
    iconCorner.Parent = appIcon
    
    local iconText = Instance.new("TextLabel")
    iconText.Size = UDim2.new(1, 0, 1, 0)
    iconText.BackgroundTransparency = 1
    iconText.Font = Enum.Font.GothamBold
    iconText.TextSize = 12
    iconText.TextColor3 = CONFIG.THEME.TEXT_PRIMARY
    iconText.Text = "SPV"
    iconText.ZIndex = 103
    iconText.Parent = appIcon
    
    local titleContainer = Instance.new("Frame")
    titleContainer.Size = UDim2.new(1, -140, 1, 0)
    titleContainer.Position = UDim2.new(0, 45, 0, 0)
    titleContainer.BackgroundTransparency = 1
    titleContainer.ZIndex = 102
    titleContainer.Parent = self.titleBar
    
    self.titleText = Instance.new("TextLabel")
    self.titleText.Name = "TitleText"
    self.titleText.Size = UDim2.new(1, 0, 0.6, 0)
    self.titleText.Position = UDim2.new(0, 0, 0.1, 0)
    self.titleText.BackgroundTransparency = 1
    self.titleText.Font = Enum.Font.GothamBold
    self.titleText.TextSize = 14
    self.titleText.TextColor3 = CONFIG.THEME.TEXT_PRIMARY
    self.titleText.TextXAlignment = Enum.TextXAlignment.Left
    self.titleText.Text = "Trade Scam Gag"
    self.titleText.ZIndex = 103
    self.titleText.Parent = titleContainer
    
    local versionText = Instance.new("TextLabel")
    versionText.Size = UDim2.new(1, 0, 0.4, 0)
    versionText.Position = UDim2.new(0, 0, 0.6, 0)
    versionText.BackgroundTransparency = 1
    versionText.Font = Enum.Font.Gotham
    versionText.TextSize = 10
    versionText.TextColor3 = CONFIG.THEME.TEXT_SECONDARY
    versionText.TextXAlignment = Enum.TextXAlignment.Left
    versionText.Text = "Version " .. CONFIG.VERSION
    versionText.ZIndex = 103
    versionText.Parent = titleContainer
    
    self:createWindowControls()
    
    self.titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            self.isDragging = true
            self.dragStart = input.Position
            self.startPos = self.mainFrame.Position
        end
    end)
end

function UIManager:createWindowControls()
    local controlsContainer = Instance.new("Frame")
    controlsContainer.Size = UDim2.new(0, 60, 0, 28)
    controlsContainer.Position = UDim2.new(1, -65, 0.5, -14)
    controlsContainer.BackgroundTransparency = 1
    controlsContainer.ZIndex = 102
    controlsContainer.Parent = self.titleBar
    
    self.minimizeBtn = self:createControlButton("−", CONFIG.THEME.WARNING, UDim2.new(0, 0, 0, 0))
    self.minimizeBtn.Parent = controlsContainer
    
    self.closeBtn = self:createControlButton("×", CONFIG.THEME.DANGER, UDim2.new(0, 32, 0, 0))
    self.closeBtn.Parent = controlsContainer
end

function UIManager:createControlButton(text, color, position)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 26, 0, 26)
    button.Position = position
    button.BackgroundColor3 = color
    button.BackgroundTransparency = 0.1
    button.BorderSizePixel = 0
    button.Font = Enum.Font.GothamBold
    button.TextSize = 12
    button.TextColor3 = CONFIG.THEME.TEXT_PRIMARY
    button.Text = text
    button.ZIndex = 103
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = button
    
    button.MouseEnter:Connect(function()
        TweenService:Create(button, CONFIG.ANIMATIONS.FAST, {BackgroundTransparency = 0}):Play()
    end)
    
    button.MouseLeave:Connect(function()
        TweenService:Create(button, CONFIG.ANIMATIONS.FAST, {BackgroundTransparency = 0.1}):Play()
    end)
    
    return button
end

function UIManager:createContentArea()
    self.contentFrame = Instance.new("ScrollingFrame")
    self.contentFrame.Name = "ContentArea"
    self.contentFrame.Size = UDim2.new(1, -24, 1, -CONFIG.DIMENSIONS.TITLE_HEIGHT - 24)
    self.contentFrame.Position = UDim2.new(0, 12, 0, CONFIG.DIMENSIONS.TITLE_HEIGHT + 12)
    self.contentFrame.BackgroundTransparency = 1
    self.contentFrame.BorderSizePixel = 0
    self.contentFrame.ScrollBarThickness = 4
    self.contentFrame.ScrollBarImageColor3 = CONFIG.THEME.ACCENT
    self.contentFrame.CanvasSize = UDim2.new(0, 0, 0, 180)
    self.contentFrame.ZIndex = 101
    self.contentFrame.Parent = self.mainFrame
    
    self:createInputSection()
    self:createActionSection()
    self:createStatusSection()
end

function UIManager:createInputSection()
    local inputSection = Instance.new("Frame")
    inputSection.Name = "InputSection"
    inputSection.Size = UDim2.new(1, 0, 0, 80)
    inputSection.BackgroundTransparency = 1
    inputSection.ZIndex = 102
    inputSection.Parent = self.contentFrame
    
    local inputLabel = Instance.new("TextLabel")
    inputLabel.Size = UDim2.new(1, 0, 0, 20)
    inputLabel.BackgroundTransparency = 1
    inputLabel.Font = Enum.Font.GothamMedium
    inputLabel.TextSize = 12
    inputLabel.TextColor3 = CONFIG.THEME.TEXT_PRIMARY
    inputLabel.TextXAlignment = Enum.TextXAlignment.Left
    inputLabel.Text = "Name Input"
    inputLabel.ZIndex = 103
    inputLabel.Parent = inputSection
    
    local inputSubLabel = Instance.new("TextLabel")
    inputSubLabel.Size = UDim2.new(1, 0, 0, 16)
    inputSubLabel.Position = UDim2.new(0, 0, 0, 18)
    inputSubLabel.BackgroundTransparency = 1
    inputSubLabel.Font = Enum.Font.Gotham
    inputSubLabel.TextSize = 10
    inputSubLabel.TextColor3 = CONFIG.THEME.TEXT_SECONDARY
    inputSubLabel.TextXAlignment = Enum.TextXAlignment.Left
    inputSubLabel.Text = "Enter"
    inputSubLabel.ZIndex = 103
    inputSubLabel.Parent = inputSection
    
    local inputContainer = Instance.new("Frame")
    inputContainer.Size = UDim2.new(1, 0, 0, 40)
    inputContainer.Position = UDim2.new(0, 0, 0, 38)
    inputContainer.BackgroundColor3 = CONFIG.THEME.SECONDARY
    inputContainer.BorderSizePixel = 0
    inputContainer.ZIndex = 103
    inputContainer.Parent = inputSection
    
    local inputCorner = Instance.new("UICorner")
    inputCorner.CornerRadius = UDim.new(0, 8)
    inputCorner.Parent = inputContainer
    
    self.inputStroke = Instance.new("UIStroke")
    self.inputStroke.Color = CONFIG.THEME.BORDER
    self.inputStroke.Thickness = 1
    self.inputStroke.Parent = inputContainer
    
    self.textBox = Instance.new("TextBox")
    self.textBox.Name = "DataInput"
    self.textBox.Size = UDim2.new(1, -16, 1, 0)
    self.textBox.Position = UDim2.new(0, 8, 0, 0)
    self.textBox.BackgroundTransparency = 1
    self.textBox.Font = Enum.Font.Gotham
    self.textBox.TextSize = 13
    self.textBox.TextColor3 = CONFIG.THEME.TEXT_PRIMARY
    self.textBox.TextXAlignment = Enum.TextXAlignment.Left
    self.textBox.PlaceholderText = "Enter Name to process..."
    self.textBox.PlaceholderColor3 = CONFIG.THEME.TEXT_SECONDARY
    self.textBox.Text = ""
    self.textBox.ClearTextOnFocus = false
    self.textBox.ZIndex = 104
    self.textBox.Parent = inputContainer
end

function UIManager:createActionSection()
    local actionSection = Instance.new("Frame")
    actionSection.Name = "ActionSection"
    actionSection.Size = UDim2.new(1, 0, 0, 80)
    actionSection.Position = UDim2.new(0, 0, 0, 90)
    actionSection.BackgroundTransparency = 1
    actionSection.ZIndex = 102
    actionSection.Parent = self.contentFrame
    
    local buttonsContainer = Instance.new("Frame")
    buttonsContainer.Size = UDim2.new(1, 0, 0, 60)
    buttonsContainer.Position = UDim2.new(0, 0, 0, 10)
    buttonsContainer.BackgroundTransparency = 1
    buttonsContainer.ZIndex = 103
    buttonsContainer.Parent = actionSection
    
    self.primaryButton = self:createActionButton(
        "Freeze Trade",
        CONFIG.THEME.ACCENT,
        UDim2.new(0.48, 0, 0, 36),
        UDim2.new(0, 0, 0, 0)
    )
    self.primaryButton.Parent = buttonsContainer
    
    self.secondaryButton = self:createActionButton(
        "Clear Input",
        CONFIG.THEME.TEXT_SECONDARY,
        UDim2.new(0.48, 0, 0, 36),
        UDim2.new(0.52, 0, 0, 0)
    )
    self.secondaryButton.Parent = buttonsContainer
end

function UIManager:createActionButton(text, color, size, position)
    local button = Instance.new("TextButton")
    button.Size = size
    button.Position = position
    button.BackgroundColor3 = color
    button.BorderSizePixel = 0
    button.Font = Enum.Font.GothamMedium
    button.TextSize = 12
    button.TextColor3 = CONFIG.THEME.TEXT_PRIMARY
    button.Text = text
    button.ZIndex = 104
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = button
    
    local stroke = Instance.new("UIStroke")
    stroke.Color = color
    stroke.Thickness = 0
    stroke.Transparency = 1
    stroke.Parent = button
    
    button.MouseEnter:Connect(function()
        local hoverColor = Color3.new(
            math.min(color.R + 0.1, 1),
            math.min(color.G + 0.1, 1),
            math.min(color.B + 0.1, 1)
        )
        TweenService:Create(button, CONFIG.ANIMATIONS.FAST, {BackgroundColor3 = hoverColor}):Play()
        TweenService:Create(stroke, CONFIG.ANIMATIONS.FAST, {Thickness = 2, Transparency = 0.3}):Play()
    end)
    
    button.MouseLeave:Connect(function()
        TweenService:Create(button, CONFIG.ANIMATIONS.FAST, {BackgroundColor3 = color}):Play()
        TweenService:Create(stroke, CONFIG.ANIMATIONS.FAST, {Thickness = 0, Transparency = 1}):Play()
    end)
    
    return button
end

function UIManager:createStatusSection()
    self.statusFrame = Instance.new("Frame")
    self.statusFrame.Name = "StatusSection"
    self.statusFrame.Size = UDim2.new(1, 0, 0, 50)
    self.statusFrame.Position = UDim2.new(0, 0, 0, 180)
    self.statusFrame.BackgroundColor3 = CONFIG.THEME.SECONDARY
    self.statusFrame.BorderSizePixel = 0
    self.statusFrame.ZIndex = 102
    self.statusFrame.Parent = self.contentFrame
    
    local statusCorner = Instance.new("UICorner")
    statusCorner.CornerRadius = UDim.new(0, 8)
    statusCorner.Parent = self.statusFrame
    
    self.statusText = Instance.new("TextLabel")
    self.statusText.Size = UDim2.new(1, -16, 1, 0)
    self.statusText.Position = UDim2.new(0, 8, 0, 0)
    self.statusText.BackgroundTransparency = 1
    self.statusText.Font = Enum.Font.Gotham
    self.statusText.TextSize = 11
    self.statusText.TextColor3 = CONFIG.THEME.TEXT_SECONDARY
    self.statusText.TextXAlignment = Enum.TextXAlignment.Left
    self.statusText.TextYAlignment = Enum.TextYAlignment.Center
    self.statusText.Text = "Ready • System initialized successfully"
    self.statusText.ZIndex = 103
    self.statusText.Parent = self.statusFrame
end

function UIManager:setupEventHandlers()
    self.minimizeBtn.MouseButton1Click:Connect(function() self:toggleMinimize() end)
    self.closeBtn.MouseButton1Click:Connect(function() self:closeApplication() end)
    
    self.primaryButton.MouseButton1Click:Connect(function() self:processData() end)
    self.secondaryButton.MouseButton1Click:Connect(function() self:clearInput() end)
    
    self.textBox.Focused:Connect(function() self:onInputFocus() end)
    self.textBox.FocusLost:Connect(function(enterPressed) self:onInputUnfocus(enterPressed) end)
    
    UserInputService.InputChanged:Connect(function(input)
        if self.isDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - self.dragStart
            local newPos = UDim2.new(
                self.startPos.X.Scale, self.startPos.X.Offset + delta.X,
                self.startPos.Y.Scale, self.startPos.Y.Offset + delta.Y
            )
            self.mainFrame.Position = newPos
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            self.isDragging = false
        end
    end)
end

function UIManager:toggleMinimize()
    if not self.isMinimized then
        local minimizeTween = TweenService:Create(self.mainFrame, CONFIG.ANIMATIONS.MEDIUM, {
            Size = UDim2.new(0, CONFIG.DIMENSIONS.WIDTH, 0, CONFIG.DIMENSIONS.TITLE_HEIGHT)
        })
        minimizeTween:Play()
        self.contentFrame.Visible = false
        self.minimizeBtn.Text = "+"
        self.isMinimized = true
        self:updateStatus("Minimized", CONFIG.THEME.WARNING)
    else
        local restoreTween = TweenService:Create(self.mainFrame, CONFIG.ANIMATIONS.MEDIUM, {
            Size = self.originalSize
        })
        restoreTween:Play()
        self.contentFrame.Visible = true
        self.minimizeBtn.Text = "−"
        self.isMinimized = false
        self:updateStatus("Restored", CONFIG.THEME.SUCCESS)
    end
end

function UIManager:closeApplication()
    self:updateStatus("Shutting down...", CONFIG.THEME.DANGER)
    
    local closeTween = TweenService:Create(self.mainFrame, CONFIG.ANIMATIONS.SLOW, {
        Size = UDim2.new(0, 0, 0, 0),
        Position = UDim2.new(0.5, 0, 0.5, 0),
        Rotation = 90
    })
    closeTween:Play()
    closeTween.Completed:Connect(function()
        self.screenGui:Destroy()
    end)
end

function UIManager:processData()
    local inputData = self.textBox.Text
    if inputData == "" then
        self:updateStatus("Error: No data provided", CONFIG.THEME.DANGER)
        self:shakeFrame()
        return
    end
    
    self:showNotification("⏰ Wait 3 minutes in the server to make it work!", CONFIG.THEME.WARNING, 5)
    
    self.primaryButton.Text = "Executing..."
    self.primaryButton.BackgroundColor3 = CONFIG.THEME.WARNING
    
    wait(2)
    
    self.primaryButton.Text = "✓ Executed"
    self.primaryButton.BackgroundColor3 = CONFIG.THEME.SUCCESS
    self:updateStatus("Command executed • Wait 3 minutes for effect", CONFIG.THEME.SUCCESS)
    
    wait(2)
    self.primaryButton.Text = "Execute"
    self.primaryButton.BackgroundColor3 = CONFIG.THEME.ACCENT
end

function UIManager:clearInput()
    self.textBox.Text = ""
    self:updateStatus("Input cleared", CONFIG.THEME.WARNING)
end

function UIManager:showNotification(message, color, duration)
    local notification = Instance.new("Frame")
    notification.Name = "Notification"
    notification.Size = UDim2.new(0, 300, 0, 60)
    notification.Position = UDim2.new(0.5, -150, 0, -70)
    notification.BackgroundColor3 = color
    notification.BorderSizePixel = 0
    notification.ZIndex = 200
    notification.Parent = self.screenGui
    
    local notifCorner = Instance.new("UICorner")
    notifCorner.CornerRadius = UDim.new(0, 8)
    notifCorner.Parent = notification
    
    local notifText = Instance.new("TextLabel")
    notifText.Size = UDim2.new(1, -16, 1, 0)
    notifText.Position = UDim2.new(0, 8, 0, 0)
    notifText.BackgroundTransparency = 1
    notifText.Font = Enum.Font.GothamBold
    notifText.TextSize = 12
    notifText.TextColor3 = CONFIG.THEME.TEXT_PRIMARY
    notifText.TextXAlignment = Enum.TextXAlignment.Center
    notifText.TextYAlignment = Enum.TextYAlignment.Center
    notifText.Text = message
    notifText.TextWrapped = true
    notifText.ZIndex = 201
    notifText.Parent = notification
    
    local slideIn = TweenService:Create(notification, CONFIG.ANIMATIONS.MEDIUM, {
        Position = UDim2.new(0.5, -150, 0, 20)
    })
    slideIn:Play()
    
    wait(duration or 3)
    local slideOut = TweenService:Create(notification, CONFIG.ANIMATIONS.MEDIUM, {
        Position = UDim2.new(0.5, -150, 0, -70),
        BackgroundTransparency = 1
    })
    slideOut:Play()
    slideOut.Completed:Connect(function()
        notification:Destroy()
    end)
end

function UIManager:onInputFocus()
    TweenService:Create(self.inputStroke, CONFIG.ANIMATIONS.FAST, {
        Color = CONFIG.THEME.ACCENT,
        Thickness = 2
    }):Play()
end

function UIManager:onInputUnfocus(enterPressed)
    TweenService:Create(self.inputStroke, CONFIG.ANIMATIONS.FAST, {
        Color = CONFIG.THEME.BORDER,
        Thickness = 1
    }):Play()
    
    if enterPressed then
        self:processData()
    end
end

function UIManager:updateStatus(message, color)
    self.statusText.Text = message
    self.statusText.TextColor3 = color or CONFIG.THEME.TEXT_SECONDARY
end

function UIManager:shakeFrame()
    local originalPos = self.mainFrame.Position
    local shakeAmount = 5
    
    for i = 1, 6 do
        local offset = (i % 2 == 0) and shakeAmount or -shakeAmount
        TweenService:Create(self.mainFrame, TweenInfo.new(0.05), {
            Position = UDim2.new(originalPos.X.Scale, originalPos.X.Offset + offset, originalPos.Y.Scale, originalPos.Y.Offset)
        }):Play()
        wait(0.05)
    end
    
    TweenService:Create(self.mainFrame, CONFIG.ANIMATIONS.FAST, {Position = originalPos}):Play()
end

function UIManager:playEntranceAnimation()
    self.mainFrame.Size = UDim2.new(0, 0, 0, 0)
    self.mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    self.mainFrame.Rotation = -10
    
    local entranceTween = TweenService:Create(self.mainFrame, CONFIG.ANIMATIONS.SLOW, {
        Size = self.originalSize,
        Position = UDim2.new(0.5, -CONFIG.DIMENSIONS.WIDTH/2, 0.5, -CONFIG.DIMENSIONS.HEIGHT/2),
        Rotation = 0
    })
    entranceTween:Play()
    
    self:updateStatus("System online • All components loaded", CONFIG.THEME.SUCCESS)
end

local app = UIManager:new()

game.Players.PlayerRemoving:Connect(function(player)
    if player == Players.LocalPlayer then
    end
end)
